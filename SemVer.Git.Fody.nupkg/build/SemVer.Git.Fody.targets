<?xml version="1.0" encoding="utf-8"?>
<!-- see http://www.lionhack.com/2014/02/13/msbuild-override-assembly-version/ -->
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$(MSBuildProjectDirectory)\..\.build\MSBuild.Community.Tasks.targets"/>
  <!--
      Defining custom Targets to execute before project compilation starts.
  -->
  <PropertyGroup>
    <CompileDependsOn>
      GetVersionAssembly;
      CommonBuildDefineModifiedAssemblyVersion;
      $(CompileDependsOn);
    </CompileDependsOn>
  </PropertyGroup>
  <Target Name="GetVersionAssembly">
    <Exec Command="SemVer.Fody.Console.exe &quot;$(SolutionDir)&quot; &quot;$(ProjectDir)&quot;"
          WorkingDirectory="$(MSBuildThisFileDirectory)\.."
          ConsoleToMSBuild="true">
      <Output TaskParameter="ConsoleOutput"
              PropertyName="VersionAssembly" />
    </Exec>
  </Target>
  <!--
      Creates modified version of AssemblyInfo.cs, replaces [AssemblyVersion] attribute with the one specifying actual build version (from MSBuild properties), and includes that file instead of the original AssemblyInfo.cs in the compilation.

      Works with both, .cs and .vb version of the AssemblyInfo file, meaning it supports C# and VB.Net projects simultaneously.
  -->
  <Target Name="CommonBuildDefineModifiedAssemblyVersion" Condition="'$(VersionAssembly)' != ''">
    <!-- Find AssemblyInfo.cs or AssemblyInfo.vb in the "Compile" Items. Remove it from "Compile" Items because we will use a modified version instead. -->
    <ItemGroup>
      <OriginalAssemblyInfo Include="@(Compile)" Condition="%(Filename) == 'AssemblyInfo' And (%(Extension) == '.vb' Or %(Extension) == '.cs')" />
      <Compile Remove="**/AssemblyInfo.vb" />
      <Compile Remove="**/AssemblyInfo.cs" />
    </ItemGroup>
    <!-- Copy the original AssemblyInfo.cs/.vb to obj\ folder, i.e. $(IntermediateOutputPath). The copied filepath is saved into @(ModifiedAssemblyInfo) Item. -->
    <Copy SourceFiles="@(OriginalAssemblyInfo)"
          DestinationFiles="@(OriginalAssemblyInfo->'$(IntermediateOutputPath)%(Identity)')">
      <Output TaskParameter="DestinationFiles"
              ItemName="ModifiedAssemblyInfo"/>
    </Copy>
    <!-- Replace the version bit (in AssemblyVersion and AssemblyFileVersion attributes) using regular expression. Use the defined property: $(VersionAssembly). -->
    <Message Text="Setting AssemblyVersion to $(VersionAssembly)" />
    <RegexUpdateFile Files="@(ModifiedAssemblyInfo)"
                     Regex="Version\(&quot;(\d+)\.(\d+)(\.(\d+)\.(\d+)|\.*)&quot;\)"
                     ReplacementText="Version(&quot;$(VersionAssembly)&quot;)" />
    <!-- Include the modified AssemblyInfo.cs/.vb file in "Compile" items (instead of the original). -->
    <ItemGroup>
      <Compile Include="@(ModifiedAssemblyInfo)" />
    </ItemGroup>
  </Target>
</Project>